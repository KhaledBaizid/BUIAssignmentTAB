{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "discourageImplicitMeasures": true,
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/BOOK-N9O1STNGVT;WideWorldImportersDW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "BOOK-N9O1STNGVT",
            "database": "WideWorldImportersDW"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "ServiceAccount",
          "kind": "SQL",
          "path": "book-n9o1stngvt;WideWorldImportersDW",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "City",
        "columns": [
          {
            "name": "City Key",
            "dataType": "int64",
            "sourceColumn": "City Key"
          },
          {
            "name": "WWI City ID",
            "dataType": "int64",
            "sourceColumn": "WWI City ID"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City"
          },
          {
            "name": "State Province",
            "dataType": "string",
            "sourceColumn": "State Province"
          },
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country"
          },
          {
            "name": "Continent",
            "dataType": "string",
            "sourceColumn": "Continent"
          },
          {
            "name": "Sales Territory",
            "dataType": "string",
            "sourceColumn": "Sales Territory"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Subregion",
            "dataType": "string",
            "sourceColumn": "Subregion"
          },
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "Location"
          },
          {
            "name": "Latest Recorded Population",
            "dataType": "int64",
            "sourceColumn": "Latest Recorded Population"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    Cube_City = Source{[Schema=\"Cube\",Item=\"City\"]}[Data]",
                "in",
                "    Cube_City"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% of Profit by City",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[City]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by State Province",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[State Province]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by Country",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[Country]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by Ciontinent",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[Continent]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by Sales Territory",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[Sales Territory]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by Subregion",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[Subregion]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% of Profit by Region",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('City'[Region]) ))",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ],
        "hierarchies": [
          {
            "name": "Geography",
            "levels": [
              {
                "name": "Continent",
                "ordinal": 0,
                "column": "Continent"
              },
              {
                "name": "Country",
                "ordinal": 1,
                "column": "Country"
              },
              {
                "name": "State Province",
                "ordinal": 2,
                "column": "State Province"
              },
              {
                "name": "City",
                "ordinal": 3,
                "column": "City"
              }
            ]
          },
          {
            "name": "Sales Region",
            "levels": [
              {
                "name": "Region",
                "ordinal": 0,
                "column": "Region"
              },
              {
                "name": "Subregion",
                "ordinal": 1,
                "column": "Subregion"
              },
              {
                "name": "Sales Territory",
                "ordinal": 2,
                "column": "Sales Territory"
              },
              {
                "name": "State Province",
                "ordinal": 3,
                "column": "State Province"
              },
              {
                "name": "City",
                "ordinal": 4,
                "column": "City"
              }
            ]
          }
        ]
      },
      {
        "name": "Item",
        "columns": [
          {
            "name": "Stock Item Key",
            "dataType": "int64",
            "sourceColumn": "Stock Item Key"
          },
          {
            "name": "WWI Stock Item ID",
            "dataType": "int64",
            "sourceColumn": "WWI Stock Item ID"
          },
          {
            "name": "Stock Item",
            "dataType": "string",
            "sourceColumn": "Stock Item"
          },
          {
            "name": "Color",
            "dataType": "string",
            "sourceColumn": "Color"
          },
          {
            "name": "Selling Package",
            "dataType": "string",
            "sourceColumn": "Selling Package"
          },
          {
            "name": "Buying Package",
            "dataType": "string",
            "sourceColumn": "Buying Package"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand"
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size"
          },
          {
            "name": "Lead Time Days",
            "dataType": "int64",
            "sourceColumn": "Lead Time Days"
          },
          {
            "name": "Quantity Per Outer",
            "dataType": "int64",
            "sourceColumn": "Quantity Per Outer"
          },
          {
            "name": "Is Chiller Stock",
            "dataType": "boolean",
            "sourceColumn": "Is Chiller Stock"
          },
          {
            "name": "Barcode",
            "dataType": "string",
            "sourceColumn": "Barcode"
          },
          {
            "name": "Tax Rate",
            "dataType": "double",
            "sourceColumn": "Tax Rate"
          },
          {
            "name": "Unit Price",
            "dataType": "double",
            "sourceColumn": "Unit Price"
          },
          {
            "name": "Recommended Retail Price",
            "dataType": "double",
            "sourceColumn": "Recommended Retail Price"
          },
          {
            "name": "Typical Weight Per Unit",
            "dataType": "double",
            "sourceColumn": "Typical Weight Per Unit"
          },
          {
            "name": "Valid From",
            "dataType": "dateTime",
            "sourceColumn": "Valid From"
          },
          {
            "name": "Valid To",
            "dataType": "dateTime",
            "sourceColumn": "Valid To"
          },
          {
            "name": "Current",
            "dataType": "int64",
            "sourceColumn": "Current"
          },
          {
            "name": "Lineage Key",
            "dataType": "int64",
            "sourceColumn": "Lineage Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    Cube_Item = Source{[Schema=\"Cube\",Item=\"Item\"]}[Data]",
                "in",
                "    Cube_Item"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Item Brand",
            "levels": [
              {
                "name": "Brand",
                "ordinal": 0,
                "column": "Brand"
              },
              {
                "name": "Stock Item",
                "ordinal": 1,
                "column": "Stock Item"
              }
            ]
          }
        ]
      },
      {
        "name": "Item-Current",
        "columns": [
          {
            "name": "WWI Stock Item ID",
            "dataType": "int64",
            "sourceColumn": "WWI Stock Item ID"
          },
          {
            "name": "Stock Item",
            "dataType": "string",
            "sourceColumn": "Stock Item"
          },
          {
            "name": "Color",
            "dataType": "string",
            "sourceColumn": "Color"
          },
          {
            "name": "Selling Package",
            "dataType": "string",
            "sourceColumn": "Selling Package"
          },
          {
            "name": "Buying Package",
            "dataType": "string",
            "sourceColumn": "Buying Package"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand"
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size"
          },
          {
            "name": "Lead Time Days",
            "dataType": "int64",
            "sourceColumn": "Lead Time Days"
          },
          {
            "name": "Quantity Per Outer",
            "dataType": "int64",
            "sourceColumn": "Quantity Per Outer"
          },
          {
            "name": "Is Chiller Stock",
            "dataType": "boolean",
            "sourceColumn": "Is Chiller Stock"
          },
          {
            "name": "Barcode",
            "dataType": "string",
            "sourceColumn": "Barcode"
          },
          {
            "name": "Tax Rate",
            "dataType": "double",
            "sourceColumn": "Tax Rate"
          },
          {
            "name": "Unit Price",
            "dataType": "double",
            "sourceColumn": "Unit Price"
          },
          {
            "name": "Recommended Retail Price",
            "dataType": "double",
            "sourceColumn": "Recommended Retail Price"
          },
          {
            "name": "Typical Weight Per Unit",
            "dataType": "double",
            "sourceColumn": "Typical Weight Per Unit"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Item-Current\" = Source{[Schema=\"Cube\",Item=\"Item-Current\"]}[Data]",
                "in",
                "    #\"Cube_Item-Current\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Current Item Brand",
            "levels": [
              {
                "name": "Brand",
                "ordinal": 0,
                "column": "Brand"
              },
              {
                "name": "Stock Item",
                "ordinal": 1,
                "column": "Stock Item"
              }
            ]
          }
        ]
      },
      {
        "name": "Sales Performance",
        "columns": [
          {
            "name": "Sale Key",
            "dataType": "int64",
            "sourceColumn": "Sale Key"
          },
          {
            "name": "City Key",
            "dataType": "int64",
            "sourceColumn": "City Key"
          },
          {
            "name": "WWI City ID",
            "dataType": "int64",
            "sourceColumn": "WWI City ID"
          },
          {
            "name": "Stock Item Key",
            "dataType": "int64",
            "sourceColumn": "Stock Item Key"
          },
          {
            "name": "WWI Stock Item ID",
            "dataType": "int64",
            "sourceColumn": "WWI Stock Item ID"
          },
          {
            "name": "Invoice Date Key",
            "dataType": "dateTime",
            "sourceColumn": "Invoice Date Key"
          },
          {
            "name": "Delivery Date Key",
            "dataType": "dateTime",
            "sourceColumn": "Delivery Date Key"
          },
          {
            "name": "Salesperson Key",
            "dataType": "int64",
            "sourceColumn": "Salesperson Key"
          },
          {
            "name": "WWI Employee ID",
            "dataType": "int64",
            "sourceColumn": "WWI Employee ID"
          },
          {
            "name": "WWI Invoice ID",
            "dataType": "int64",
            "sourceColumn": "WWI Invoice ID"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description"
          },
          {
            "name": "Package",
            "dataType": "string",
            "sourceColumn": "Package"
          },
          {
            "name": "Quantity",
            "dataType": "int64",
            "sourceColumn": "Quantity"
          },
          {
            "name": "Unit Price",
            "dataType": "double",
            "sourceColumn": "Unit Price"
          },
          {
            "name": "Tax Rate",
            "dataType": "double",
            "sourceColumn": "Tax Rate"
          },
          {
            "name": "Total Excluding Tax",
            "dataType": "double",
            "sourceColumn": "Total Excluding Tax"
          },
          {
            "name": "Tax Amount",
            "dataType": "double",
            "sourceColumn": "Tax Amount"
          },
          {
            "name": "Profit",
            "dataType": "double",
            "sourceColumn": "Profit"
          },
          {
            "name": "Total Including Tax",
            "dataType": "double",
            "sourceColumn": "Total Including Tax"
          },
          {
            "name": "Total Dry Items",
            "dataType": "int64",
            "sourceColumn": "Total Dry Items"
          },
          {
            "name": "Total Chiller Items",
            "dataType": "int64",
            "sourceColumn": "Total Chiller Items"
          },
          {
            "name": "Sales Count",
            "dataType": "int64",
            "sourceColumn": "Sales Count"
          },
          {
            "name": "Lineage Key",
            "dataType": "int64",
            "sourceColumn": "Lineage Key"
          }
        ],
        "partitions": [
          {
            "name": "Partition 2014",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2014, 1, 1) and [Invoice Date Key] <= #date(2014, 12, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                  "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2014, 1, 1) and [Invoice Date Key] <= #date(2014, 12, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2013",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] < #date(2014, 1, 1))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                  "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] < #date(2014, 1, 1))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2015",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2015, 1, 1) and [Invoice Date Key] <= #date(2015, 12, 31))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                  "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2015, 1, 1) and [Invoice Date Key] <= #date(2015, 12, 31))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Partition 2016",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2016, 1, 1))",
                "in",
                "    #\"Filtered Rows\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                  "    #\"Cube_Sales Performance\" = Source{[Schema=\"Cube\",Item=\"Sales Performance\"]}[Data],",
                  "    #\"Filtered Rows\" = Table.SelectRows(#\"Cube_Sales Performance\", each [Invoice Date Key] >= #date(2016, 1, 1))",
                  "in",
                  "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Total  Profit",
            "expression": "SUM([Profit])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Total  Quantity of Items",
            "expression": "SUM([Quantity])",
            "formatString": "0,0"
          },
          {
            "name": "Average of Profit",
            "expression": "AVERAGE([Profit])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Salesperson-Current",
        "columns": [
          {
            "name": "WWI Employee ID",
            "dataType": "int64",
            "sourceColumn": "WWI Employee ID"
          },
          {
            "name": "Employee",
            "dataType": "string",
            "sourceColumn": "Employee"
          },
          {
            "name": "Preferred Name",
            "dataType": "string",
            "sourceColumn": "Preferred Name"
          },
          {
            "name": "Last Name",
            "dataType": "string",
            "sourceColumn": "Last Name"
          },
          {
            "name": "First Name",
            "dataType": "string",
            "sourceColumn": "First Name"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    #\"Cube_Salesperson-Current\" = Source{[Schema=\"Cube\",Item=\"Salesperson-Current\"]}[Data]",
                "in",
                "    #\"Cube_Salesperson-Current\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% of Profit by Emplyee",
            "expression": " DIVIDE(SUM('Sales Performance'[Profit]), CALCULATE( SUM('Sales Performance'[Profit]), ALL('Salesperson-Current') )) ",
            "formatString": "0.00%;-0.00%;0.00%",
            "kpi": {
              "targetExpression": "0.1",
              "targetFormatString": "0.00%;-0.00%;0.00%",
              "statusGraphic": "Traffic Light - Single",
              "statusExpression": [
                "var x='Salesperson-Current'[% of Profit by Emplyee] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.097,-1,",
                "\t                If(x<0.1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "StaticValue"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Absolute"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "0.097"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "0.1"
                }
              ]
            }
          },
          {
            "name": "% of total items by Emplyee",
            "expression": " DIVIDE(SUM('Sales Performance'[Quantity]), CALCULATE( SUM('Sales Performance'[Quantity]), ALL('Salesperson-Current') )) ",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "Date",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "Date"
          },
          {
            "name": "Day Number",
            "dataType": "int64",
            "sourceColumn": "Day Number"
          },
          {
            "name": "Day",
            "dataType": "string",
            "sourceColumn": "Day"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Short Month",
            "dataType": "string",
            "sourceColumn": "Short Month"
          },
          {
            "name": "Calendar Month Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Month Number"
          },
          {
            "name": "Calendar Month Label",
            "dataType": "string",
            "sourceColumn": "Calendar Month Label"
          },
          {
            "name": "Calendar Year",
            "dataType": "int64",
            "sourceColumn": "Calendar Year"
          },
          {
            "name": "Calendar Year Label",
            "dataType": "string",
            "sourceColumn": "Calendar Year Label"
          },
          {
            "name": "Fiscal Month Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Month Number"
          },
          {
            "name": "Fiscal Month Label",
            "dataType": "string",
            "sourceColumn": "Fiscal Month Label"
          },
          {
            "name": "Fiscal Year",
            "dataType": "int64",
            "sourceColumn": "Fiscal Year"
          },
          {
            "name": "Fiscal Year Label",
            "dataType": "string",
            "sourceColumn": "Fiscal Year Label"
          },
          {
            "name": "ISO Week Number",
            "dataType": "int64",
            "sourceColumn": "ISO Week Number"
          },
          {
            "name": "Today",
            "dataType": "int64",
            "sourceColumn": "Today"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/BOOK-N9O1STNGVT;WideWorldImportersDW\",",
                "    Cube_Date = Source{[Schema=\"Cube\",Item=\"Date\"]}[Data]",
                "in",
                "    Cube_Date"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Calendar",
            "levels": [
              {
                "name": "Calendar Year Label",
                "ordinal": 0,
                "column": "Calendar Year Label"
              },
              {
                "name": "Fiscal Month Label",
                "ordinal": 1,
                "column": "Fiscal Month Label"
              },
              {
                "name": "Date",
                "ordinal": 2,
                "column": "Date"
              }
            ]
          },
          {
            "name": "Fiscal",
            "levels": [
              {
                "name": "Fiscal Year Label",
                "ordinal": 1,
                "column": "Fiscal Year Label"
              },
              {
                "name": "Fiscal Month Label",
                "ordinal": 0,
                "column": "Fiscal Month Label"
              },
              {
                "name": "Date",
                "ordinal": 2,
                "column": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "Annual Calcs",
        "calculationGroup": {
          "precedence": 25,
          "calculationItems": [
            {
              "name": "YTD",
              "expression": "CALCULATE(SELECTEDMEASURE(),DATESYTD('Date'[Date]))",
              "ordinal": 2
            },
            {
              "name": "Previuos Year",
              "expression": "CALCULATE(SELECTEDMEASURE(),PREVIOUSYEAR('Date'[Date]))",
              "ordinal": 1
            },
            {
              "name": "Next Year",
              "expression": "CALCULATE(SELECTEDMEASURE(),NEXTYEAR('Date'[Date]))",
              "ordinal": 3
            }
          ]
        },
        "columns": [
          {
            "name": "Sort Order",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "12990720-46f5-4994-8f14-501ee59eea05",
        "fromTable": "Sales Performance",
        "fromColumn": "City Key",
        "toTable": "City",
        "toColumn": "City Key"
      },
      {
        "name": "f6f3f27d-78df-4c81-b857-b0e0a4c275c1",
        "fromTable": "Sales Performance",
        "fromColumn": "Stock Item Key",
        "toTable": "Item",
        "toColumn": "Stock Item Key"
      },
      {
        "name": "738c29cf-c03e-49f0-96bc-a934d1360789",
        "fromTable": "Sales Performance",
        "fromColumn": "WWI Stock Item ID",
        "toTable": "Item-Current",
        "toColumn": "WWI Stock Item ID"
      },
      {
        "name": "f1cfa84b-9696-4913-aac7-0f0da23d6fc2",
        "fromTable": "Sales Performance",
        "fromColumn": "WWI Employee ID",
        "toTable": "Salesperson-Current",
        "toColumn": "WWI Employee ID"
      },
      {
        "name": "9276d44b-f62a-4507-af47-fca0b99d4adc",
        "fromTable": "Sales Performance",
        "fromColumn": "Invoice Date Key",
        "toTable": "Date",
        "toColumn": "Date"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}